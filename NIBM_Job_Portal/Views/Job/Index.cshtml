@model IEnumerable<NIBM_Job_Portal.Models.Job>
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject SignInManager<ApplicationUser> _signManager
@inject UserManager<ApplicationUser> _userManager
@inject ApplicationDbContext _applicationDbContext
@{
    var id = User.FindFirst(ClaimTypes.NameIdentifier).Value;
    var user = _applicationDbContext.Users.FirstOrDefault(x => x.Id == id);
}
@using NIBM_Job_Portal.Helpers
@section scripts{
    <script src="@Url.Content("~/js/sideBar.js")" type="text/javascript"></script>
    <script>
        changeSideBarButtonStatus("sidebar_job");
    </script>
}


@{
    ViewData["Title"] = "Job";
}

<div class="
              d-flex
              justify-content-left
              flex-wrap flex-md-nowrap
              align-items-center
              pb-2
              mb-3
              border-bottom
            ">
    <h2 class="h2">Job List</h2>
</div>

<div class="container" style="margin-left: 0px">
    @if (user.UserType == (int)UserTypeEnum.User)
    {
        <a class="btn btn-sm btn-primary mb-1" asp-area="" asp-controller="Job" asp-action="Create"> <i class="fa fa-plus-circle" aria-hidden="true"></i> Post new Job</a>
    }

    <table class="table text-left">
        <thead>
            <tr>
                <th>Ref. No</th>
                <th>Company</th>
                <th>Position</th>
                <th>Category</th>
                <th>Closing Date</th>
                <th>Status</th>
                @* <th>Count</th>*@
                <th>Actions</th>
            </tr>
        </thead>
        <tbody  >

            @if (Model.Count() > 0)
            {

                foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Company.Company_Name</td>
                        <td>@item.Position</td>
                        <td>@item.JobCategory.Name</td>
                        <td>@item.ClosingDate.ToShortDateString()</td>
                        <td>
                            @if (item.Status == (int)JobStatusEnum.Active)
                            {
                                <span class="text-success">Active</span>
                            }
                            else if (item.Status == (int)JobStatusEnum.Expired)
                            {
                                <span class="text-danger">Archived</span>
                            }
                            else
                            {
                                <span class="text-danger">Disabled By Admin</span>
                            }

                        </td>
                        @*<td>@item.count</td>*@
                        <td class="text-left">
                            <div>
                                <div class="col">
                                    @if (user.UserType == (int)UserTypeEnum.User)
                                    {
                                        <a class="btn btn-sm btn-primary m-1" href="@Url.Action("JobApplications", "Job", new { Id = @item.Id })"> <i class="fa fa-eye" aria-hidden="true"></i></a>
                                        <a class="btn btn-sm btn-primary m-1" href="@Url.Action("Create", "Job", new { Id = @item.Id })"> <i class="fa fa-pencil-square" aria-hidden="true"></i></a>
                                        <button class="btn btn-sm btn-danger m-1" onclick="DeleteData(@item.Id)">  <i class="fa fa-times-circle" aria-hidden="true"></i></button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-primary m-1" onclick="Enable(@item.Id)"> <i class="fa fa-pencil-square" aria-hidden="true"></i> Enable </button>
                                        <button class="btn btn-sm btn-danger m-1" onclick="Disable(@item.Id)"> <i class="fa fa-times-circle" aria-hidden="true"></i> Disable </button>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr> 

                }
            }
            else
            {
                <tr>
                    <td colspan="7">No record found!</td>
                </tr>
            }

        </tbody>
    </table>
</div>

<script>

    $(document).ready(function () {

    
        var data ='@ViewData["JobCeated"]';
        if (data != "") {
            swal("Success!", "Job Created!", "success");
        }
    });

    function  DeleteData(id){

        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        url: '@Url.Action("Delete","Job")',
                        method: 'GET',
                        data: { Id: id },
                        success: function (data) {
                            window.location.reload();
                        }

                    });

                }
            });



    }


    function Enable(id) {

                    $.ajax({
                        url: '@Url.Action("ChangeState","Job")',
                        method: 'GET',
                        data: { Id: id ,status : 0},
                        success: function (data) {
                            window.location.reload();
                        }

                    });

    }

    function Disable(id) {
                    $.ajax({
                        url: '@Url.Action("ChangeState", "Job")',
                        method: 'GET',
                        data: { Id: id, status: 2},
                        success: function (data) {
                            window.location.reload();
                        }

                    });

    }
</script>